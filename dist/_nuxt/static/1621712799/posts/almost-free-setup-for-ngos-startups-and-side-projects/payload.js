__NUXT_JSONP__("/posts/almost-free-setup-for-ngos-startups-and-side-projects", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{post:{slug:"almost-free-setup-for-ngos-startups-and-side-projects",description:"DYOR Maker",title:"Do Your Own Robot",image:"\u002Fposts\u002Falmost-free-setup-for-ngos-startups-and-side-projects\u002Fheader.png",alt:"Robot Maker",publishedAt:"2020-12-09T00:00:00.000Z",tags:["Maker","Robotic"],tldr:t,tweet:t,toc:[{id:u,depth:m,text:v},{id:w,depth:m,text:x},{id:f,depth:m,text:y},{id:z,depth:m,text:A},{id:B,depth:m,text:C}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"dyor-rover"},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#dyor-rover",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:"DYOR Rover"}]},{type:a,value:c},{type:b,tag:n,props:{id:u},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#objective",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This project focuses on the design, development and manufacturing of a rover that can autonomously navigate covering aspects such as control, sensorization, programming and planning of robotic systems. The DYOR robot follows a very basic approach and it is dependent on ultrasonic sensors and a digital compass with Arduino. The robot is a standalone system and the autonomous navigation is done by the onboard controller. The methodology implemented is commonly used in robotic and informatics."}]},{type:a,value:c},{type:b,tag:n,props:{id:w},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#summary",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"HW Aduino Nano v3.0 together with its expansion board with the main advantage to offer rows with pins connected to +5V and 0V, which allow directly connect more sensors and actuators, otherwise it would be needed the breadboard to connect +5V and GND pins."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The Nano v3.0 has 14 Digital-Inputs\u002FOutputs and 8 Analog-Inputs. Some pins can offer an extended feature for serial communication through USB. I support features to control motors with PWM signals, switches or optical sensors and I2C \u002F SPI to communicate with external devices."}]},{type:a,value:c},{type:b,tag:n,props:{id:f},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#code",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is some used "},{type:b,tag:f,props:{},children:[{type:a,value:"Code()"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Servo object control"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"#include \u003CServo.h\u003E \nServo myservo1;\nServo myservo2;\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Servo spin"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"void setup() {\n  Serial.begin(9600);\n  myservo1.attach(8);\n  myservo2.attach(9);\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n  pinMode(3, OUTPUT);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Distance stop, Control motors and wheels spin time"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"void loop() {\n  digitalWrite(trigPin, HIGH);\n  _delay_ms(500);\n  digitalWrite(trigPin, LOW);\n  duration = pulseIn(echoPin, HIGH);\n  distance = (duration\u002F2) \u002F 29.1;        \n  if (distance \u003C 40) { \n    digitalWrite(3, HIGH);\n    myservo1.write(n); \n    myservo2.write(180-n);\n   delay(1000);  \n   myservo1.write(n);\n   myservo2.write(90-n);\n   delay(500);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Waiting Mode"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"  else { \u002F\u002F waiting mode\n    digitalWrite(3, LOW);\n    myservo1.write(180-n);\n    myservo2.write(n);\n}\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:n,props:{id:z},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#features",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Arduino Uno board"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Ultrasonic Distance Sensor - HC-SR04"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"HC-05 Wireless Bluetooth RF"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Jumper Wires Generic Male\u002FMale"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"LED generic"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Wheel kit"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Powerbank"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Wood chassis"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Hot glue gun"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Android App Inventor2"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"TinkerCAD"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Schematics Fritzing"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:B},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#backstory",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"DYOR robot is the Hello World to robotics arena. Working with this board helped me with in-depth understanding of Microcontroller’s architecture and ARM architecture."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is suitable to develop quick embedded applications with sophisticated libraries, APIs and Arduino development environment."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"CAD Design | Digital Manufacturing | Electronic assembly | Robotic Programming"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Tutored by Dr. Leopoldo Armesto from the Universitat Politècnica de Valencia (Spain)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:g,props:{href:"https:\u002F\u002Funsplash.com\u002Fphotos\u002FzP7X_B86xOg",rel:["some",a]},children:[{type:b,tag:D,props:{src:"\u002Fresources\u002F_gen\u002Fimages\u002Fdyor1.PNG",alt:""},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:D,props:{alt:"'Arduino'",src:"https:\u002F\u002Fsource.unsplash.com\u002FfZB51omnY_Y"},children:[]}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Falmost-free-setup-for-ngos-startups-and-side-projects",extension:".md",createdAt:"2021-05-06T18:24:06.504Z",updatedAt:"2021-05-22T18:48:52.600Z",readingTime:{text:"2 min read",minutes:1.895,time:113700,words:379},html:"\u003Ch1 id=\"dyor-rover\"\u003EDYOR Rover\u003C\u002Fh1\u003E\n\u003Ch2 id=\"objective\"\u003EObjective\u003C\u002Fh2\u003E\n\u003Cp\u003EThis project focuses on the design, development and manufacturing of a rover that can autonomously navigate covering aspects such as control, sensorization, programming and planning of robotic systems. The DYOR robot follows a very basic approach and it is dependent on ultrasonic sensors and a digital compass with Arduino. The robot is a standalone system and the autonomous navigation is done by the onboard controller. The methodology implemented is commonly used in robotic and informatics.\u003C\u002Fp\u003E\n\u003Ch2 id=\"summary\"\u003ESummary\u003C\u002Fh2\u003E\n\u003Cp\u003EHW Aduino Nano v3.0 together with its expansion board with the main advantage to offer rows with pins connected to +5V and 0V, which allow directly connect more sensors and actuators, otherwise it would be needed the breadboard to connect +5V and GND pins.\u003C\u002Fp\u003E\n\u003Cp\u003EThe Nano v3.0 has 14 Digital-Inputs\u002FOutputs and 8 Analog-Inputs. Some pins can offer an extended feature for serial communication through USB. I support features to control motors with PWM signals, switches or optical sensors and I2C \u002F SPI to communicate with external devices.\u003C\u002Fp\u003E\n\u003Ch2 id=\"code\"\u003ECode\u003C\u002Fh2\u003E\n\u003Cp\u003EThis is some used \u003Ccode\u003ECode()\u003C\u002Fcode\u003E \u003C\u002Fp\u003E\n\u003Cp\u003EServo object control \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E#include &lt;Servo.h&gt; \nServo myservo1;\nServo myservo2;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EServo spin\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Evoid setup() {\n  Serial.begin(9600);\n  myservo1.attach(8);\n  myservo2.attach(9);\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n  pinMode(3, OUTPUT);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EDistance stop, Control motors and wheels spin time\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Evoid loop() {\n  digitalWrite(trigPin, HIGH);\n  _delay_ms(500);\n  digitalWrite(trigPin, LOW);\n  duration = pulseIn(echoPin, HIGH);\n  distance = (duration\u002F2) \u002F 29.1;        \n  if (distance &lt; 40) { \n    digitalWrite(3, HIGH);\n    myservo1.write(n); \n    myservo2.write(180-n);\n   delay(1000);  \n   myservo1.write(n);\n   myservo2.write(90-n);\n   delay(500);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EWaiting Mode\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E  else { \u002F\u002F waiting mode\n    digitalWrite(3, LOW);\n    myservo1.write(180-n);\n    myservo2.write(n);\n}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"features\"\u003EFeatures\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003EArduino Uno board\u003C\u002Fli\u003E\n\u003Cli\u003EUltrasonic Distance Sensor - HC-SR04\u003C\u002Fli\u003E\n\u003Cli\u003EHC-05 Wireless Bluetooth RF \u003C\u002Fli\u003E\n\u003Cli\u003EJumper Wires Generic Male\u002FMale \u003C\u002Fli\u003E\n\u003Cli\u003ELED generic\u003C\u002Fli\u003E\n\u003Cli\u003EWheel kit \u003C\u002Fli\u003E\n\u003Cli\u003EPowerbank \u003C\u002Fli\u003E\n\u003Cli\u003EWood chassis\u003C\u002Fli\u003E\n\u003Cli\u003EHot glue gun\u003C\u002Fli\u003E\n\u003Cli\u003EAndroid App Inventor2\u003C\u002Fli\u003E\n\u003Cli\u003ETinkerCAD\u003C\u002Fli\u003E\n\u003Cli\u003ESchematics Fritzing\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"backstory\"\u003EBackstory\u003C\u002Fh2\u003E\n\u003Cp\u003EDYOR robot is the Hello World to robotics arena. Working with this board helped me with in-depth understanding of Microcontroller’s architecture and ARM architecture. \u003C\u002Fp\u003E\n\u003Cp\u003EThis is suitable to develop quick embedded applications with sophisticated libraries, APIs and Arduino development environment.\u003C\u002Fp\u003E\n\u003Cp\u003ECAD Design | Digital Manufacturing | Electronic assembly | Robotic Programming\u003C\u002Fp\u003E\n\u003Cp\u003ETutored by Dr. Leopoldo Armesto from the Universitat Politècnica de Valencia (Spain)\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fphotos\u002FzP7X_B86xOg\" rel=\"some text\"\u003E\u003Cimg src=\"\u002Fresources\u002F_gen\u002Fimages\u002Fdyor1.PNG\" alt=\"\" \u002F\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsource.unsplash.com\u002FfZB51omnY_Y\" alt=\"&#39;Arduino&#39;\"\u003E\u003C\u002Fp\u003E\n"}}],fetch:[],mutations:void 0}}("text","element","\n","p","li","code","a","true",-1,"span","icon","icon-link",2,"h2","div","nuxt-content-highlight","pre","language-text","line-numbers",null,"objective","Objective","summary","Summary","Code","features","Features","backstory","Backstory","img")));